{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.49.0",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@gentrace/core!",
  "docComment": "",
  "name": "@gentrace/core",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@gentrace/core!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!bulkCreateEvaluations:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function bulkCreateEvaluations(evaluations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CreateEvaluationV2",
              "canonicalReference": "@gentrace/core!~CreateEvaluationV2:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2EvaluationsBulkPost200Response",
              "canonicalReference": "@gentrace/core!~V2EvaluationsBulkPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "evaluations",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "bulkCreateEvaluations"
        },
        {
          "kind": "Class",
          "canonicalReference": "@gentrace/core!Configuration:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Configuration "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Configuration",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@gentrace/core!Configuration:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Configuration` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(param?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigurationParameters",
                  "canonicalReference": "@gentrace/core!ConfigurationParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "param",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Configuration#accessToken:member",
              "docComment": "/**\n * parameter for oauth2 security\n *\n * @param name - security name\n *\n * @param scopes - oauth2 scope  @memberof Configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accessToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "accessToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Configuration#apiKey:member",
              "docComment": "/**\n * parameter for apiKey security\n *\n * @param name - security name  @memberof Configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | ((name: string) => string) | ((name: string) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "apiKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Configuration#baseOptions:member",
              "docComment": "/**\n * base options for axios calls\n *\n * @type {any}  @memberof Configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Configuration#basePath:member",
              "docComment": "/**\n * override base path\n *\n * @type {string}  @memberof Configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "basePath?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "basePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Configuration#formDataCtor:member",
              "docComment": "/**\n * The FormData constructor that will be used to create multipart form data requests. You can inject this here so that execution environments that do not support the FormData class can still run the generated client.\n *\n * @type {new () => FormData}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formDataCtor?: "
                },
                {
                  "kind": "Content",
                  "text": "new () => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "formDataCtor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!Configuration#isJsonMime:member(1)",
              "docComment": "/**\n * Check if the given MIME is a JSON MIME. JSON MIME examples: application/json application/json; charset=UTF8 APPLICATION/JSON application/vnd.company+json\n *\n * @param mime - MIME (Multipurpose Internet Mail Extensions)  @return True if the given MIME is JSON, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isJsonMime(mime: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mime",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isJsonMime"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Configuration#logger:member",
              "docComment": "/**\n * Custom logger that clients can provide to capture logs/warnings/errors from the SDK.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        info: (message: string, context?: any) => void;\n        warn: (message: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context?: any) => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Configuration#password:member",
              "docComment": "/**\n * parameter for basic security\n *\n * @type {string}  @memberof Configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "password?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "password",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Configuration#username:member",
              "docComment": "/**\n * parameter for basic security\n *\n * @type {string}  @memberof Configuration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "username?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!ConfigurationParameters:interface",
          "docComment": "/**\n * Gentrace API These API routes are designed to ingest events from clients.\n *\n * The version of the OpenAPI document: 0.27.0\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). https://openapi-generator.tech Do not edit the class manually.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface ConfigurationParameters "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ConfigurationParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!ConfigurationParameters#accessToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accessToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "accessToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!ConfigurationParameters#apiKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | ((name: string) => string) | ((name: string) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "apiKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!ConfigurationParameters#baseOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!ConfigurationParameters#basePath:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "basePath?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "basePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!ConfigurationParameters#formDataCtor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formDataCtor?: "
                },
                {
                  "kind": "Content",
                  "text": "new () => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "formDataCtor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!ConfigurationParameters#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        info: (message: string, context?: any) => void;\n        warn: (message: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context?: any) => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!ConfigurationParameters#password:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "password?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "password",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!ConfigurationParameters#username:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "username?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!constructSubmissionPayloadAdvanced:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "constructSubmissionPayloadAdvanced: (pipelineIdentifier: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", testRuns: "
            },
            {
              "kind": "Reference",
              "text": "TestRun",
              "canonicalReference": "@gentrace/core!TestRun:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", context?: "
            },
            {
              "kind": "Reference",
              "text": "ResultContext",
              "canonicalReference": "@gentrace/core!ResultContext:type"
            },
            {
              "kind": "Content",
              "text": ", triggerRemoteEvals?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TestResultPostRequest",
              "canonicalReference": "@gentrace/core!TestResultPostRequest:interface"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipelineIdentifier",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "testRuns",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "triggerRemoteEvals",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "constructSubmissionPayloadAdvanced"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!constructSubmissionPayloadSimple:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "constructSubmissionPayloadSimple: (pipelineSlug: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", testRuns: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultSimplePostRequestTestRunsInner",
              "canonicalReference": "@gentrace/core!~V1TestResultSimplePostRequestTestRunsInner:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", context?: "
            },
            {
              "kind": "Reference",
              "text": "ResultContext",
              "canonicalReference": "@gentrace/core!ResultContext:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultSimplePostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultSimplePostRequest:interface"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipelineSlug",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "testRuns",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "constructSubmissionPayloadSimple"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!Context:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Context = "
            },
            {
              "kind": "Reference",
              "text": "PipelineRunContext",
              "canonicalReference": "@gentrace/core!~PipelineRunContext:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "CoreStepRunContext",
              "canonicalReference": "@gentrace/core!CoreStepRunContext:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Context",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!CoreStepRunContext:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CoreStepRunContext = "
            },
            {
              "kind": "Content",
              "text": "{\n    render?: {\n        type: \"html\";\n        key: string;\n    };\n    metadata?: "
            },
            {
              "kind": "Reference",
              "text": "Metadata",
              "canonicalReference": "@gentrace/core!~Metadata:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CoreStepRunContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!createDataset:function(1)",
          "docComment": "/**\n * Creates a new dataset in the Gentrace API.  @async\n *\n * @param payload - The dataset creation payload.\n *\n * @returns {Promise<DatasetV2>} - A promise that resolves to the created dataset.\n *\n * @throws\n *\n * {Error} - Throws an error if the Gentrace API key is not initialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createDataset: (payload: "
            },
            {
              "kind": "Reference",
              "text": "CreateDatasetV2",
              "canonicalReference": "@gentrace/core!~CreateDatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "payload",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createDataset"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!CreateEvaluationType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CreateEvaluationType = "
            },
            {
              "kind": "Reference",
              "text": "CreateEvaluationV2",
              "canonicalReference": "@gentrace/core!~CreateEvaluationV2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CreateEvaluationType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!createTestCase:function(1)",
          "docComment": "/**\n * Creates a single test case for a given pipeline ID from the Gentrace API\n *\n * @async\n *\n * @remarks\n *\n * If a pipeline slug is specified, the golden dataset will be used. If a datasetId is provided, it will be used instead.\n *\n * @param payload - New test case payload\n *\n * @returns {Promise<string>} A Promise that resolves to the created case ID\n *\n * @throws\n *\n * {Error} Throws an error if the SDK is not initialized. Call init() first.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createTestCase: (payload: "
            },
            {
              "kind": "Reference",
              "text": "CreateSingleTestCase",
              "canonicalReference": "@gentrace/core!~CreateSingleTestCase:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "payload",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createTestCase"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!createTestCases:function(1)",
          "docComment": "/**\n * Creates multiple test cases for a given pipeline ID from the Gentrace API\n *\n * @async\n *\n * @remarks\n *\n * If a pipeline slug is specified, the golden dataset will be used. If a datasetId is provided, it will be used instead.\n *\n * @param payload - New test case payloads\n *\n * @returns {Promise<string>} A Promise that resolves to the number of test cases successfully created\n *\n * @throws\n *\n * {Error} Throws an error if the SDK is not initialized. Call init() first.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createTestCases: (payload: "
            },
            {
              "kind": "Reference",
              "text": "CreateMultipleTestCases",
              "canonicalReference": "@gentrace/core!~CreateMultipleTestCases:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "payload",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createTestCases"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!createTestRunners:function(1)",
          "docComment": "/**\n * Creates test runners for a given pipeline using locally provided test data\n *\n * @param pipeline - The pipeline instance\n *\n * @param localData - Array of local test data objects\n *\n * @returns {Array<PipelineRunLocalDataTuple>} An array of PipelineRunTestCaseTuple\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createTestRunners(pipeline: "
            },
            {
              "kind": "Reference",
              "text": "Pipeline",
              "canonicalReference": "@gentrace/core!Pipeline:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "GentracePlugin",
              "canonicalReference": "@gentrace/core!GentracePlugin:class"
            },
            {
              "kind": "Content",
              "text": "<any, any>;\n}>"
            },
            {
              "kind": "Content",
              "text": ", localData: "
            },
            {
              "kind": "Reference",
              "text": "LocalTestData",
              "canonicalReference": "@gentrace/core!LocalTestData:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PipelineRunDataTuple",
              "canonicalReference": "@gentrace/core!PipelineRunDataTuple:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipeline",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "localData",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "createTestRunners"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!defineInteraction:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defineInteraction<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", Fn extends "
            },
            {
              "kind": "Reference",
              "text": "InteractionFn",
              "canonicalReference": "@gentrace/core!~InteractionFn:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "InteractionFn",
              "canonicalReference": "@gentrace/core!~InteractionFn:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ">(interaction: "
            },
            {
              "kind": "Reference",
              "text": "InteractionDefinition",
              "canonicalReference": "@gentrace/core!~InteractionDefinition:type"
            },
            {
              "kind": "Content",
              "text": "<T, Fn>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "Fn"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "interaction",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "Fn",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "name": "defineInteraction"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!defineTestSuite:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defineTestSuite<Fn extends "
            },
            {
              "kind": "Reference",
              "text": "AnyFn",
              "canonicalReference": "@gentrace/core!~AnyFn:type"
            },
            {
              "kind": "Content",
              "text": ">(testSuite: "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    fn: Fn;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "Fn"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "testSuite",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "Fn",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "defineTestSuite"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!deinit:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deinit(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "deinit"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!deleteTestCase:function(1)",
          "docComment": "/**\n * Deletes a single test case from the Gentrace API\n *\n * @async\n *\n * @remarks\n *\n * This function deletes an existing test case with the provided ID.\n *\n * @param id - The ID of the test case to delete\n *\n * @returns {Promise<boolean>} A Promise that resolves to true if the test case was successfully deleted\n *\n * @throws\n *\n * {Error} Throws an error if the SDK is not initialized or if the test case ID is invalid\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "deleteTestCase: (id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<boolean>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "deleteTestCase"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!enumParameter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "enumParameter: ({ name, options, defaultValue, }: "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    options: string[];\n    defaultValue: string;\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    getValue: () => string;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ name, options, defaultValue, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "enumParameter"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!EvaluationType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EvaluationType = "
            },
            {
              "kind": "Reference",
              "text": "EvaluationV2",
              "canonicalReference": "@gentrace/core!~EvaluationV2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "EvaluationType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!FeedbackRequest:interface",
          "docComment": "/**\n * @export  @interface FeedbackRequest\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface FeedbackRequest "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FeedbackRequest",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!FeedbackRequest#details:member",
              "docComment": "/**\n * @type {string}  @memberof FeedbackRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "details?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "details",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!FeedbackRequest#pipelineRunId:member",
              "docComment": "/**\n * @type {string}  @memberof FeedbackRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipelineRunId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pipelineRunId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!FeedbackRequest#recordedTime:member",
              "docComment": "/**\n * @type {string}  @memberof FeedbackRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recordedTime: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recordedTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!FeedbackRequest#score:member",
              "docComment": "/**\n * @type {number}  @memberof FeedbackRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "score: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "score",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!FeedbackResponse:interface",
          "docComment": "/**\n * @export  @interface FeedbackResponse\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface FeedbackResponse "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "FeedbackResponse",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!FeedbackResponse#message:member",
              "docComment": "/**\n * @type {string}  @memberof FeedbackResponse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!flush:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function flush(): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<boolean>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "flush"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!GENTRACE_API_KEY:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GENTRACE_API_KEY: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string> | ((name: string) => string) | ((name: string) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>)"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "GENTRACE_API_KEY",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!GENTRACE_BASE_PATH:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GENTRACE_BASE_PATH: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "GENTRACE_BASE_PATH",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!GENTRACE_BRANCH:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GENTRACE_BRANCH: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "GENTRACE_BRANCH",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!GENTRACE_COMMIT:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GENTRACE_COMMIT: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "GENTRACE_COMMIT",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!GENTRACE_ENVIRONMENT_NAME:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GENTRACE_ENVIRONMENT_NAME: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "GENTRACE_ENVIRONMENT_NAME",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!GENTRACE_RESULT_NAME:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GENTRACE_RESULT_NAME: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "GENTRACE_RESULT_NAME",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!GENTRACE_RUN_NAME:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GENTRACE_RUN_NAME: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "GENTRACE_RUN_NAME",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!GENTRACE_SHOW_CONNECTION_ERRORS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GENTRACE_SHOW_CONNECTION_ERRORS: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "GENTRACE_SHOW_CONNECTION_ERRORS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@gentrace/core!GentracePlugin:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class GentracePlugin<C, A> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "A",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "GentracePlugin",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!GentracePlugin#advanced:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract advanced<T extends "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "GentracePlugin",
                  "canonicalReference": "@gentrace/core!GentracePlugin:class"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ">(params: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        pipeline: "
                },
                {
                  "kind": "Reference",
                  "text": "Pipeline",
                  "canonicalReference": "@gentrace/core!Pipeline:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>;\n        pipelineRun: "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineRun",
                  "canonicalReference": "@gentrace/core!PipelineRun:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        gentraceConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "Configuration",
                  "canonicalReference": "@gentrace/core!Configuration:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "A"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "advanced"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!GentracePlugin#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract config: "
                },
                {
                  "kind": "Content",
                  "text": "C"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!GentracePlugin#getConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract getConfig(): "
                },
                {
                  "kind": "Content",
                  "text": "C"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "getConfig"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getDataset:function(1)",
          "docComment": "/**\n * Retrieves a single dataset from the Gentrace API.  @async\n *\n * @param id - The ID of the dataset to retrieve.\n *\n * @returns {Promise<DatasetV2>} - A promise that resolves to the retrieved dataset.\n *\n * @throws\n *\n * {Error} - Throws an error if the Gentrace API key is not initialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getDataset: (id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getDataset"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getDatasets:function(1)",
          "docComment": "/**\n * Retrieves datasets from the Gentrace API.  @async\n *\n * @param params - Optional parameters to filter the datasets.\n *\n * @param  - {string} [params.pipelineSlug] - The slug of the pipeline to filter datasets by.\n *\n * @param  - {string} [params.pipelineId] - The ID of the pipeline to filter datasets by.\n *\n * @param  - {boolean} [params.archived] - Filter datasets by archived status.\n *\n * @returns {Promise<Array<DatasetV2>>} - A promise that resolves to an array of datasets.\n *\n * @throws\n *\n * {Error} - Throws an error if the Gentrace API key is not initialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getDatasets: (params?: "
            },
            {
              "kind": "Content",
              "text": "{\n    pipelineSlug?: string;\n    pipelineId?: string;\n    archived?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": "[]>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "getDatasets"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getEvaluations:function(1)",
          "docComment": "/**\n * Retrieves evaluations for a specific result from the Gentrace API.  @async\n *\n * @param params - The parameters for the function.\n *\n * @param  - {string} params.resultId - The ID of the result to get evaluations for.\n *\n * @returns {Promise<Array<EvaluationV2>>} - A promise that resolves to an array of evaluations.\n *\n * @throws\n *\n * {Error} - Throws an error if the Gentrace API key is not initialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getEvaluations: ({ resultId, }: "
            },
            {
              "kind": "Content",
              "text": "{\n    resultId: string;\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EvaluationV3",
              "canonicalReference": "@gentrace/core!~EvaluationV3:interface"
            },
            {
              "kind": "Content",
              "text": "[]>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ resultId, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getEvaluations"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getEvaluators:function(1)",
          "docComment": "/**\n * Retrieves evaluators for a given pipeline from the Gentrace API  @async\n *\n * @param pipelineIdentifier - The pipeline slug, pipeline ID, or null (for evaluator templates)\n *\n * @returns {Promise<Array<EvaluatorV2>>} A Promise that resolves with an array of evaluators.\n *\n * @throws\n *\n * {Error} Throws an error if the SDK is not initialized. Call init() first.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getEvaluators: (pipelineIdentifier: "
            },
            {
              "kind": "Content",
              "text": "string | null"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EvaluatorV2",
              "canonicalReference": "@gentrace/core!~EvaluatorV2:interface"
            },
            {
              "kind": "Content",
              "text": "[]>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipelineIdentifier",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getEvaluators"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getGentraceApiKey:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getGentraceApiKey(): "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string> | ((name: string) => string) | ((name: string) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getGentraceApiKey"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getGentraceBasePath:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getGentraceBasePath(): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getGentraceBasePath"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getPipelines:function(1)",
          "docComment": "/**\n * Retrieves pipelines from the Gentrace API.  @async\n *\n * @param params - Optional parameters to filter the pipelines.\n *\n * @returns {Promise<Array<Pipeline>>} - A promise that resolves to an array of pipelines.\n *\n * @throws\n *\n * {Error} - Throws an error if the Gentrace API key is not initialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getPipelines: (params?: "
            },
            {
              "kind": "Reference",
              "text": "PipelineParams",
              "canonicalReference": "@gentrace/core!~PipelineParams:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V1PipelinesGet200ResponsePipelinesInner",
              "canonicalReference": "@gentrace/core!~V1PipelinesGet200ResponsePipelinesInner:type"
            },
            {
              "kind": "Content",
              "text": "[]>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "getPipelines"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getRun:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getRun: (id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RunV2",
              "canonicalReference": "@gentrace/core!~RunV2:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getRun"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getTestCase:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getTestCase: (id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCaseV2",
              "canonicalReference": "@gentrace/core!~TestCaseV2:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getTestCase"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getTestCases:function(1)",
          "docComment": "/**\n * Retrieves test cases for a given pipeline from the Gentrace API.  @async\n *\n * @remarks\n *\n * The golden dataset for the specified pipeline will be used.\n *\n * @param pipelineSlug - The slug of the pipeline to filter test cases by.\n *\n * @returns {Promise<Array<TestCase>>} - A promise that resolves to an array of test cases.\n *\n * @throws\n *\n * {Error} - Throws an error if the Gentrace API key is not initialized or if the pipeline is not found.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getTestCases: (pipelineSlug: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": "[]>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipelineSlug",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getTestCases"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getTestCasesForDataset:function(1)",
          "docComment": "/**\n * Retrieves test cases for a specific dataset from the Gentrace API.  @async\n *\n * @param datasetId - The ID of the dataset to retrieve test cases for.\n *\n * @returns {Promise<Array<TestCase>>} - A promise that resolves to an array of test cases.\n *\n * @throws\n *\n * {Error} - Throws an error if the Gentrace API key is not initialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getTestCasesForDataset: (datasetId: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": "[]>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "datasetId",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getTestCasesForDataset"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getTestResult:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getTestResult: (resultId: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExpandedTestResult",
              "canonicalReference": "@gentrace/core!~ExpandedTestResult:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "resultId",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getTestResult"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getTestResults:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getTestResults: (pipelineSlug?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResult",
              "canonicalReference": "@gentrace/core!TestResult:interface"
            },
            {
              "kind": "Content",
              "text": "[]>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipelineSlug",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "getTestResults"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getTestResultStatus:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getTestResultStatus: (resultId: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StatusInfo",
              "canonicalReference": "@gentrace/core!~StatusInfo:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "resultId",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getTestResultStatus"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!getTestRunners:function(1)",
          "docComment": "/**\n * Retrieves test runners for a given pipeline  @async\n *\n * @param pipeline - The pipeline instance\n *\n * @param datasetId - Optional dataset ID to filter test cases by.\n *\n * @returns {Promise<Array<PipelineRunDataTuple>>} A Promise that resolves with an array of PipelineRunDataTuple.\n *\n * @throws\n *\n * {Error} Throws an error if the SDK is not initialized. Call init() first.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getTestRunners: (pipeline: "
            },
            {
              "kind": "Reference",
              "text": "Pipeline",
              "canonicalReference": "@gentrace/core!Pipeline:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "GentracePlugin",
              "canonicalReference": "@gentrace/core!GentracePlugin:class"
            },
            {
              "kind": "Content",
              "text": "<any, any>;\n}>"
            },
            {
              "kind": "Content",
              "text": ", datasetId?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", caseFilter?: "
            },
            {
              "kind": "Content",
              "text": "(testCase: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"createdAt\" | \"updatedAt\" | \"archivedAt\">) => boolean"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PipelineRunDataTuple",
              "canonicalReference": "@gentrace/core!PipelineRunDataTuple:type"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 20
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipeline",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "datasetId",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "caseFilter",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 13
              },
              "isOptional": true
            }
          ],
          "name": "getTestRunners"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!globalGentraceApi:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "globalGentraceApi: "
            },
            {
              "kind": "Reference",
              "text": "V1Api",
              "canonicalReference": "@gentrace/core!V1Api:class"
            },
            {
              "kind": "Content",
              "text": " | null"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "globalGentraceApi",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!globalGentraceApiV2:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "globalGentraceApiV2: "
            },
            {
              "kind": "Reference",
              "text": "V2Api",
              "canonicalReference": "@gentrace/core!V2Api:class"
            },
            {
              "kind": "Content",
              "text": " | null"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "globalGentraceApiV2",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!globalGentraceApiV3:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "globalGentraceApiV3: "
            },
            {
              "kind": "Reference",
              "text": "V3Api",
              "canonicalReference": "@gentrace/core!V3Api:class"
            },
            {
              "kind": "Content",
              "text": " | null"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "globalGentraceApiV3",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!globalGentraceConfig:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "globalGentraceConfig: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": " | null"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "globalGentraceConfig",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@gentrace/core!globalRequestBuffer:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "globalRequestBuffer: "
            },
            {
              "kind": "Content",
              "text": "{\n    [pipelineRunId: string]: "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "isReadonly": false,
          "releaseTag": "Public",
          "name": "globalRequestBuffer",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!handleWebhook:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function handleWebhook(body: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", sendResponse: "
            },
            {
              "kind": "Content",
              "text": "(response: "
            },
            {
              "kind": "Reference",
              "text": "OutboundMessage",
              "canonicalReference": "@gentrace/core!~OutboundMessage:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "body",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "sendResponse",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "handleWebhook"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!init:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function init(values?: "
            },
            {
              "kind": "Content",
              "text": "{\n    apiKey?: string | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string> | ((name: string) => string) | ((name: string) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>);\n    basePath?: string;\n    branch?: string;\n    commit?: string;\n    showConnectionErrors?: string;\n    environmentName?: string;\n    runName?: string;\n    resultName?: string;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "values",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "init"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!InitPluginFunction:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InitPluginFunction<C extends "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": ", A> = "
            },
            {
              "kind": "Content",
              "text": "(config: C | "
            },
            {
              "kind": "Reference",
              "text": "SimpleHandler",
              "canonicalReference": "@gentrace/core!SimpleHandler:interface"
            },
            {
              "kind": "Content",
              "text": "<C>) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GentracePlugin",
              "canonicalReference": "@gentrace/core!GentracePlugin:class"
            },
            {
              "kind": "Content",
              "text": "<C, A>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "InitPluginFunction",
          "typeParameters": [
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "A",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!isConfig:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isConfig<C extends "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": ">(f: "
            },
            {
              "kind": "Content",
              "text": "C | "
            },
            {
              "kind": "Reference",
              "text": "SimpleHandler",
              "canonicalReference": "@gentrace/core!SimpleHandler:interface"
            },
            {
              "kind": "Content",
              "text": "<C>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "f",
              "canonicalReference": "@gentrace/core!~f"
            },
            {
              "kind": "Content",
              "text": " is C"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "f",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "isConfig"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!listen:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function listen(values?: "
            },
            {
              "kind": "Content",
              "text": "{\n    environmentName?: string | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "values",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "listen"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!LocalEvaluation:interface",
          "docComment": "/**\n * @export  @interface LocalEvaluation\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface LocalEvaluation "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "LocalEvaluation",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluation#debug:member",
              "docComment": "/**\n * @type {LocalEvaluationDebug}  @memberof LocalEvaluation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "debug?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalEvaluationDebug",
                  "canonicalReference": "@gentrace/core!LocalEvaluationDebug:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "debug",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluation#label:member",
              "docComment": "/**\n * Optional label for the evaluation  @type {string}  @memberof LocalEvaluation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluation#name:member",
              "docComment": "/**\n * The name of the local evaluation  @type {string}  @memberof LocalEvaluation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluation#value:member",
              "docComment": "/**\n * The numeric value of the evaluation  @type {number}  @memberof LocalEvaluation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!LocalEvaluationDebug:interface",
          "docComment": "/**\n * @export  @interface LocalEvaluationDebug\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface LocalEvaluationDebug "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "LocalEvaluationDebug",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluationDebug#error:member",
              "docComment": "/**\n * @type {LocalEvaluationDebugError}  @memberof LocalEvaluationDebug\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalEvaluationDebugError",
                  "canonicalReference": "@gentrace/core!LocalEvaluationDebugError:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluationDebug#finalClassification:member",
              "docComment": "/**\n * The final classification of the evaluation  @type {string}  @memberof LocalEvaluationDebug\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "finalClassification?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "finalClassification",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluationDebug#logs:member",
              "docComment": "/**\n * Evaluator logs  @type {Array<Array<any>>}  @memberof LocalEvaluationDebug\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logs?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluationDebug#processorLogs:member",
              "docComment": "/**\n * Processor logs  @type {Array<Array<any>>}  @memberof LocalEvaluationDebug\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processorLogs?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "processorLogs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluationDebug#resolvedPrompt:member",
              "docComment": "/**\n * The resolved prompt used for the evaluation  @type {string}  @memberof LocalEvaluationDebug\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resolvedPrompt?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resolvedPrompt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluationDebug#response:member",
              "docComment": "/**\n * The response received from the evaluation  @type {string}  @memberof LocalEvaluationDebug\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "response?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "response",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!LocalEvaluationDebugError:interface",
          "docComment": "/**\n * @export  @interface LocalEvaluationDebugError\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface LocalEvaluationDebugError "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "LocalEvaluationDebugError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluationDebugError#date:member",
              "docComment": "/**\n * Date and time of the error  @type {string}  @memberof LocalEvaluationDebugError\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "date?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "date",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!LocalEvaluationDebugError#message:member",
              "docComment": "/**\n * Error message  @type {string}  @memberof LocalEvaluationDebugError\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!LocalTestData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LocalTestData = "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    inputs: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n    expectedOutputs?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "LocalTestData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!numericParameter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "numericParameter: ({ name, defaultValue, }: "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    defaultValue: number;\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    getValue: () => number;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ name, defaultValue, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "numericParameter"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!PartialStepRunType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PartialStepRunType = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StepRun",
              "canonicalReference": "@gentrace/core!StepRun:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PartialStepRunType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@gentrace/core!Pipeline:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Pipeline<T extends "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "GentracePlugin",
              "canonicalReference": "@gentrace/core!GentracePlugin:class"
            },
            {
              "kind": "Content",
              "text": "<any, any>;\n}"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "Pipeline",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@gentrace/core!Pipeline:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Pipeline` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ slug, id, apiKey, basePath, logger, plugins, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        slug?: string;\n        id?: string;\n        apiKey?: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | ((name: string) => string) | ((name: string) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>);\n        basePath?: string;\n        logger?: {\n            info: (message: string, context?: any) => void;\n            warn: (message: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context?: any) => void;\n        };\n        plugins?: T;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ slug, id, apiKey, basePath, logger, plugins, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "IndexSignature",
              "canonicalReference": "@gentrace/core!Pipeline:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "GentracePlugin",
                  "canonicalReference": "@gentrace/core!GentracePlugin:class"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Pipeline#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "Configuration",
                  "canonicalReference": "@gentrace/core!Configuration:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!Pipeline#getLogger:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLogger(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        info: (message: string, context?: any) => void;\n        warn: (message: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ", context?: any) => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLogger"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Pipeline#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!Pipeline#logInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logInfo(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "logInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!Pipeline#logWarn:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logWarn(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "logWarn"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Pipeline#plugins:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "plugins: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "plugins",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!Pipeline#slug:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slug: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "slug",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!Pipeline#start:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start(context?: "
                },
                {
                  "kind": "Reference",
                  "text": "PluginContext",
                  "canonicalReference": "@gentrace/core!PluginContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineRun",
                  "canonicalReference": "@gentrace/core!PipelineRun:class"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        [key in keyof T]: "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<T[key][\"advanced\"]>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "start"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gentrace/core!PipelineRun:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PipelineRun "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PipelineRun",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@gentrace/core!PipelineRun:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PipelineRun` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ pipeline, context, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        pipeline: "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineLike",
                  "canonicalReference": "@gentrace/core!~PipelineLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        context?: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@gentrace/core!Context:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ pipeline, context, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#addEval:member(1)",
              "docComment": "/**\n * Adds an evaluation to the pipeline run.\n *\n * @param evaluation - The evaluation to add.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addEval(evaluation: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalEvaluation",
                  "canonicalReference": "@gentrace/core!LocalEvaluation:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "evaluation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addEval"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#addStepRunNode:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addStepRunNode(stepRun: "
                },
                {
                  "kind": "Reference",
                  "text": "StepRun",
                  "canonicalReference": "@gentrace/core!StepRun:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "stepRun",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addStepRunNode"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#checkpoint:member(1)",
              "docComment": "/**\n * Creates a checkpoint by recording a `StepRun` instance with execution metadata and pushes it to `this.stepRuns`. If no prior `StepRun` instances exist, the elapsed time is set to 0 and the start and end times are set to the current timestamp. If it is empty, elapsed time is set to 0 and start time and end time are set to the current timestamp.\n *\n * @param step - The information about the step to checkpoint. This includes the inputs and outputs of the step, as well as optional provider, invocation and modelParams metadata.\n *\n * @returns {void} The function does not return anything.\n *\n * @example\n *\n * const stepInfo = { providerName: 'MyProvider', invocation: 'doSomething', inputs: { x: 10, y: 20 }, outputs: { result: 30 } }; checkpoint(stepInfo);\n *\n * @throws\n *\n * {Error} If the `StepRun` constructor or any other operations throw an error, it will be propagated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkpoint(step: "
                },
                {
                  "kind": "Reference",
                  "text": "PRStepRunType",
                  "canonicalReference": "@gentrace/core!~PRStepRunType:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        inputs: any;\n        outputs: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "step",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkpoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!PipelineRun#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context?: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@gentrace/core!Context:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#getContext:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContext(): "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@gentrace/core!Context:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#getError:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getError(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getError"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#getId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#getLocalEvaluations:member(1)",
              "docComment": "/**\n * Returns the current evaluations stored in the PipelineRun instance.\n *\n * @returns {LocalEvaluation[]} An array of LocalEvaluation objects.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLocalEvaluations(): "
                },
                {
                  "kind": "Reference",
                  "text": "LocalEvaluation",
                  "canonicalReference": "@gentrace/core!LocalEvaluation:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLocalEvaluations"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#getPipeline:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPipeline(): "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineLike",
                  "canonicalReference": "@gentrace/core!~PipelineLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPipeline"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun.getRedactedRunFromJson:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getRedactedRunFromJson(json: "
                },
                {
                  "kind": "Content",
                  "text": "string | object"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        waitForServer?: boolean;\n        pipeline?: "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineLike",
                  "canonicalReference": "@gentrace/core!~PipelineLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        selectFields?: "
                },
                {
                  "kind": "Reference",
                  "text": "StepRunWhitelistDescriptor",
                  "canonicalReference": "@gentrace/core!~StepRunWhitelistDescriptor:type"
                },
                {
                  "kind": "Content",
                  "text": " | ((steps: "
                },
                {
                  "kind": "Reference",
                  "text": "StepRun",
                  "canonicalReference": "@gentrace/core!StepRun:class"
                },
                {
                  "kind": "Content",
                  "text": "[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "StepRunWhitelistDescriptor",
                  "canonicalReference": "@gentrace/core!~StepRunWhitelistDescriptor:type"
                },
                {
                  "kind": "Content",
                  "text": "[]);\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineRunPayload",
                  "canonicalReference": "@gentrace/core!~PipelineRunPayload:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "json",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRedactedRunFromJson"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#measure:member(1)",
              "docComment": "/**\n * Asynchronously measures the execution time of a function.\n *\n * @template F Function type that extends (...args: any[]) => any\n *\n * @param func - The function to be measured.\n *\n * @param inputs - The parameters to be passed to the function.\n *\n * @param stepInfo - Optional metadata for the function execution.\n *\n * @returns {Promise<ReturnType<F>>} Returns a promise that resolves to the return type of the function.\n *\n * @example\n *\n * async function foo(n: number) { return n * 2; } const result = await measure(foo, [2]); // result will be 4\n *\n * The function also records a `StepRun` instance with execution metadata and pushes it to `this.stepRuns`. The recorded `StepRun` includes information such as the elapsed time, start and end time, resolved inputs, and model parameters if provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "measure<F extends "
                },
                {
                  "kind": "Content",
                  "text": "(...args: any[]) => any"
                },
                {
                  "kind": "Content",
                  "text": ">(func: "
                },
                {
                  "kind": "Content",
                  "text": "F"
                },
                {
                  "kind": "Content",
                  "text": ", inputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<F>"
                },
                {
                  "kind": "Content",
                  "text": ", stepInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PRStepRunType",
                  "canonicalReference": "@gentrace/core!~PRStepRunType:type"
                },
                {
                  "kind": "Content",
                  "text": ", \"inputs\" | \"outputs\">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<F>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "F",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "func",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "inputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "stepInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "measure"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#setError:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setError(error: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setError"
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!PipelineRun#stepRuns:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stepRuns: "
                },
                {
                  "kind": "Reference",
                  "text": "StepRun",
                  "canonicalReference": "@gentrace/core!StepRun:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stepRuns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#submit:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submit({ waitForServer, selectFields, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        waitForServer?: boolean;\n        selectFields?: "
                },
                {
                  "kind": "Reference",
                  "text": "StepRunWhitelistDescriptor",
                  "canonicalReference": "@gentrace/core!~StepRunWhitelistDescriptor:type"
                },
                {
                  "kind": "Content",
                  "text": " | ((steps: "
                },
                {
                  "kind": "Reference",
                  "text": "StepRun",
                  "canonicalReference": "@gentrace/core!StepRun:class"
                },
                {
                  "kind": "Content",
                  "text": "[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "StepRunWhitelistDescriptor",
                  "canonicalReference": "@gentrace/core!~StepRunWhitelistDescriptor:type"
                },
                {
                  "kind": "Content",
                  "text": "[]);\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RunResponse",
                  "canonicalReference": "@gentrace/core!RunResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ waitForServer, selectFields, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submit"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun.submitFromJson:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static submitFromJson(json: "
                },
                {
                  "kind": "Content",
                  "text": "string | object"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        waitForServer?: boolean;\n        pipeline?: "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineLike",
                  "canonicalReference": "@gentrace/core!~PipelineLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        selectFields?: "
                },
                {
                  "kind": "Reference",
                  "text": "StepRunWhitelistDescriptor",
                  "canonicalReference": "@gentrace/core!~StepRunWhitelistDescriptor:type"
                },
                {
                  "kind": "Content",
                  "text": " | ((steps: "
                },
                {
                  "kind": "Reference",
                  "text": "StepRun",
                  "canonicalReference": "@gentrace/core!StepRun:class"
                },
                {
                  "kind": "Content",
                  "text": "[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "StepRunWhitelistDescriptor",
                  "canonicalReference": "@gentrace/core!~StepRunWhitelistDescriptor:type"
                },
                {
                  "kind": "Content",
                  "text": "[]);\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RunResponse",
                  "canonicalReference": "@gentrace/core!RunResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "json",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submitFromJson"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#toJson:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJson(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJson"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#toObject:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toObject(): "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineRunPayload",
                  "canonicalReference": "@gentrace/core!~PipelineRunPayload:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toObject"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!PipelineRun#updateContext:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateContext(updatedContext: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@gentrace/core!Context:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@gentrace/core!Context:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "updatedContext",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateContext"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!PipelineRunDataTuple:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PipelineRunDataTuple = "
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "PipelineRun",
              "canonicalReference": "@gentrace/core!PipelineRun:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TestCaseForSubmission",
              "canonicalReference": "@gentrace/core!TestCaseForSubmission:type"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PipelineRunDataTuple",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!PipelineRunTestCaseTuple:type",
          "docComment": "/**\n * @deprecated\n *\n * Use PipelineRunDataTuple instead\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PipelineRunTestCaseTuple = "
            },
            {
              "kind": "Reference",
              "text": "PipelineRunDataTuple",
              "canonicalReference": "@gentrace/core!PipelineRunDataTuple:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PipelineRunTestCaseTuple",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!PipelinesGet200Response:interface",
          "docComment": "/**\n * @export  @interface V1PipelinesGet200Response\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PipelinesGet200Response "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PipelinesGet200Response",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!PipelinesGet200Response#pipelines:member",
              "docComment": "/**\n * @type {Array<V1PipelinesGet200ResponsePipelinesInner>}  @memberof V1PipelinesGet200Response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipelines: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V1PipelinesGet200ResponsePipelinesInner",
                  "canonicalReference": "@gentrace/core!~V1PipelinesGet200ResponsePipelinesInner:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pipelines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!PluginContext:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PluginContext = "
            },
            {
              "kind": "Reference",
              "text": "PipelineRunContext",
              "canonicalReference": "@gentrace/core!~PipelineRunContext:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PluginContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!PluginStepRunContext:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PluginStepRunContext = "
            },
            {
              "kind": "Content",
              "text": "{\n    metadata?: "
            },
            {
              "kind": "Reference",
              "text": "Metadata",
              "canonicalReference": "@gentrace/core!~Metadata:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PluginStepRunContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!resetGlobalGentraceApi:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "resetGlobalGentraceApi: () => "
            },
            {
              "kind": "Content",
              "text": "void"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "resetGlobalGentraceApi"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!ResultContext:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ResultContext = "
            },
            {
              "kind": "Content",
              "text": "{\n    name?: string;\n    metadata?: "
            },
            {
              "kind": "Reference",
              "text": "Metadata",
              "canonicalReference": "@gentrace/core!~Metadata:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ResultContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!RunRequest:interface",
          "docComment": "/**\n * @export  @interface RunRequest\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface RunRequest "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "RunRequest",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!RunRequest#collectionMethod:member",
              "docComment": "/**\n * The method used to collect the run  @type {string}  @memberof RunRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collectionMethod?: "
                },
                {
                  "kind": "Reference",
                  "text": "RunRequestCollectionMethodEnum",
                  "canonicalReference": "@gentrace/core!~RunRequestCollectionMethodEnum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collectionMethod",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!RunRequest#error:member",
              "docComment": "/**\n * @type {string}  @memberof RunRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!RunRequest#id:member",
              "docComment": "/**\n * @type {string}  @memberof RunRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!RunRequest#metadata:member",
              "docComment": "/**\n * @type {{ [key: string]: MetadataValueObject; }}  @memberof RunRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataValueObject",
                  "canonicalReference": "@gentrace/core!~MetadataValueObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!RunRequest#previousRunId:member",
              "docComment": "/**\n * @type {string}  @memberof RunRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousRunId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "previousRunId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!RunRequest#slug:member",
              "docComment": "/**\n * @type {string}  @memberof RunRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slug?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "slug",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!RunRequest#stepRuns:member",
              "docComment": "/**\n * @type {Array<StepRun>}  @memberof RunRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stepRuns: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StepRun_2",
                  "canonicalReference": "@gentrace/core!~StepRun_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stepRuns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!RunResponse:interface",
          "docComment": "/**\n * @export  @interface RunResponse\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface RunResponse "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "RunResponse",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!RunResponse#pipelineRunId:member",
              "docComment": "/**\n * @type {string}  @memberof RunResponse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipelineRunId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pipelineRunId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!runTest:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function runTest(pipelineSlug: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handler: "
            },
            {
              "kind": "Content",
              "text": "(testCase: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"createdAt\" | \"updatedAt\" | \"archivedAt\">) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<[any, "
            },
            {
              "kind": "Reference",
              "text": "PipelineRun",
              "canonicalReference": "@gentrace/core!PipelineRun:class"
            },
            {
              "kind": "Content",
              "text": "]>"
            },
            {
              "kind": "Content",
              "text": ", contextOrCaseFilter?: "
            },
            {
              "kind": "Reference",
              "text": "ResultContext",
              "canonicalReference": "@gentrace/core!ResultContext:type"
            },
            {
              "kind": "Content",
              "text": " | ((testCase: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"createdAt\" | \"updatedAt\" | \"archivedAt\">) => boolean)"
            },
            {
              "kind": "Content",
              "text": ", caseFilterOrUndefined?: "
            },
            {
              "kind": "Content",
              "text": "(testCase: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"createdAt\" | \"updatedAt\" | \"archivedAt\">) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 26,
            "endIndex": 30
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipelineSlug",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "handler",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 12
              },
              "isOptional": false
            },
            {
              "parameterName": "contextOrCaseFilter",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "isOptional": true
            },
            {
              "parameterName": "caseFilterOrUndefined",
              "parameterTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 25
              },
              "isOptional": true
            }
          ],
          "name": "runTest"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!runTestWithDataset:function(1)",
          "docComment": "/**\n * Runs a test for a given pipeline slug and dataset ID.\n *\n * @param pipelineSlug - : The slug of the pipeline\n *\n * @param datasetId - : The ID of the dataset\n *\n * @param handler - : The handler function that will be called for each test case\n *\n * @param context - : An optional context object that will be passed to the Gentrace API\n *\n * @param caseFilter - : An optional filter function that will be called for each test case\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function runTestWithDataset(pipelineSlug: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", datasetId: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handler: "
            },
            {
              "kind": "Content",
              "text": "(testCase: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"createdAt\" | \"updatedAt\" | \"archivedAt\">) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<[any, "
            },
            {
              "kind": "Reference",
              "text": "PipelineRun",
              "canonicalReference": "@gentrace/core!PipelineRun:class"
            },
            {
              "kind": "Content",
              "text": "]>"
            },
            {
              "kind": "Content",
              "text": ", context?: "
            },
            {
              "kind": "Reference",
              "text": "ResultContext",
              "canonicalReference": "@gentrace/core!ResultContext:type"
            },
            {
              "kind": "Content",
              "text": ", caseFilter?: "
            },
            {
              "kind": "Content",
              "text": "(testCase: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"createdAt\" | \"updatedAt\" | \"archivedAt\">) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 23,
            "endIndex": 27
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipelineSlug",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "datasetId",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "handler",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 14
              },
              "isOptional": false
            },
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "isOptional": true
            },
            {
              "parameterName": "caseFilter",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 22
              },
              "isOptional": true
            }
          ],
          "name": "runTestWithDataset"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!runTestWithDataset:function(2)",
          "docComment": "/**\n * Runs a test for a given pipeline slug and dataset ID.\n *\n * @param pipelineSlug - : The slug of the pipeline\n *\n * @param datasetId - : The ID of the dataset\n *\n * @param handler - : The handler function that will be called for each test case\n *\n * @param caseFilter - : An optional filter function that will be called for each test case\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function runTestWithDataset(pipelineSlug: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", datasetId: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handler: "
            },
            {
              "kind": "Content",
              "text": "(testCase: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"createdAt\" | \"updatedAt\" | \"archivedAt\">) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<[any, "
            },
            {
              "kind": "Reference",
              "text": "PipelineRun",
              "canonicalReference": "@gentrace/core!PipelineRun:class"
            },
            {
              "kind": "Content",
              "text": "]>"
            },
            {
              "kind": "Content",
              "text": ", caseFilter?: "
            },
            {
              "kind": "Content",
              "text": "(testCase: "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", \"createdAt\" | \"updatedAt\" | \"archivedAt\">) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 21,
            "endIndex": 25
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "pipelineSlug",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "datasetId",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "handler",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 14
              },
              "isOptional": false
            },
            {
              "parameterName": "caseFilter",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 20
              },
              "isOptional": true
            }
          ],
          "name": "runTestWithDataset"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!SimpleHandler:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface SimpleHandler<C extends "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SimpleHandler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@gentrace/core!SimpleHandler#getConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConfig(): "
                },
                {
                  "kind": "Content",
                  "text": "C"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getConfig"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@gentrace/core!SimpleHandler#setPipelineRun:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPipelineRun(pipelineRun: "
                },
                {
                  "kind": "Reference",
                  "text": "PipelineRun",
                  "canonicalReference": "@gentrace/core!PipelineRun:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipelineRun",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "setPipelineRun"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@gentrace/core!StepRun:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StepRun "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "StepRun",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@gentrace/core!StepRun:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StepRun` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(providerName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", invocation: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", elapsedTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", startTime: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", endTime: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", inputs: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", modelParams: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", outputs: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@gentrace/core!Context:type"
                },
                {
                  "kind": "Content",
                  "text": ", error: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "providerName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "invocation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elapsedTime",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "startTime",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "endTime",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "inputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "modelParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "outputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@gentrace/core!Context:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#elapsedTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "elapsedTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "elapsedTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#endTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endTime: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "endTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#inputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputs: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#invocation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "invocation: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "invocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#modelParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modelParams: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modelParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#outputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputs: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "outputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#providerName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "providerName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "providerName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@gentrace/core!StepRun#startTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startTime: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "startTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!StepRunType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StepRunType = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "StepRun",
              "canonicalReference": "@gentrace/core!StepRun:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "StepRunType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!stringParameter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "stringParameter: ({ name, defaultValue, }: "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    defaultValue: string;\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    getValue: () => string;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ name, defaultValue, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "stringParameter"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!submitTestResult:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function submitTestResult(pipelineSlug: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", testCases: "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TestCaseV2",
              "canonicalReference": "@gentrace/core!~TestCaseV2:interface"
            },
            {
              "kind": "Content",
              "text": ")[]"
            },
            {
              "kind": "Content",
              "text": ", outputsList: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>[]"
            },
            {
              "kind": "Content",
              "text": ", context?: "
            },
            {
              "kind": "Reference",
              "text": "ResultContext",
              "canonicalReference": "@gentrace/core!ResultContext:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipelineSlug",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "testCases",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "outputsList",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            },
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": true
            }
          ],
          "name": "submitTestResult"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!submitTestRunners:function(1)",
          "docComment": "/**\n * Submits test runners for a given pipeline  @async\n *\n * @param pipeline - The pipeline instance\n *\n * @param pipelineRunTestCases - an array of PipelineRunTestCaseTuple\n *\n * @param options - Optional configuration for submitting test runners\n *\n * @returns {Promise<V1TestResultPost200Response>} A Promise that resolves with the response from the Gentrace API\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function submitTestRunners(pipeline: "
            },
            {
              "kind": "Reference",
              "text": "Pipeline",
              "canonicalReference": "@gentrace/core!Pipeline:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "GentracePlugin",
              "canonicalReference": "@gentrace/core!GentracePlugin:class"
            },
            {
              "kind": "Content",
              "text": "<any, any>;\n}>"
            },
            {
              "kind": "Content",
              "text": ", pipelineRunTestCases: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PipelineRunDataTuple",
              "canonicalReference": "@gentrace/core!PipelineRunDataTuple:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "SubmitTestRunnersOptions",
              "canonicalReference": "@gentrace/core!~SubmitTestRunnersOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 17
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pipeline",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "pipelineRunTestCases",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "isOptional": true
            }
          ],
          "name": "submitTestRunners"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!templateParameter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "templateParameter: <T extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ">({ name, defaultValue, variables, }: "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    defaultValue: string;\n    variables?: {\n        name: keyof T;\n        example: T[keyof T];\n    }[];\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    render: (values: T) => string;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ name, defaultValue, variables, }",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "templateParameter"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!TestCase:interface",
          "docComment": "/**\n * @export  @interface TestCase\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TestCase "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestCase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#archivedAt:member",
              "docComment": "/**\n * The date and time when the test case was archived, can be null if the test case has not been archived  @type {string}  @memberof TestCase\n *\n * @deprecated\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "archivedAt: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "archivedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#createdAt:member",
              "docComment": "/**\n * The date and time when the test case was created  @type {string}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createdAt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "createdAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#datasetId:member",
              "docComment": "/**\n * The ID of the dataset that the test case belongs to  @type {string}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datasetId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datasetId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#deletedAt:member",
              "docComment": "/**\n * The date and time when the test case was deleted, can be null if the test case has not been deleted  @type {string}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deletedAt: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deletedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#expectedOutputs:member",
              "docComment": "/**\n * The expected outputs for the test case  @type {object}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expectedOutputs?: "
                },
                {
                  "kind": "Content",
                  "text": "object | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "expectedOutputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#id:member",
              "docComment": "/**\n * The ID of the test case  @type {string}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#inputs:member",
              "docComment": "/**\n * The input data for the test case as a JSON object  @type {{ [key: string]: any; }}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputs: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#name:member",
              "docComment": "/**\n * The name of the test case  @type {string}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#pipelineId:member",
              "docComment": "/**\n * The ID of the pipeline that the test case belongs to  @type {string}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipelineId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pipelineId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCase#updatedAt:member",
              "docComment": "/**\n * The date and time when the test case was last updated  @type {string}  @memberof TestCase\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatedAt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!TestCaseForSubmission:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TestCaseForSubmission = "
            },
            {
              "kind": "Content",
              "text": "{\n    id?: string;\n    name?: string;\n    inputs?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestCaseForSubmission",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!TestCaseGet200Response:interface",
          "docComment": "/**\n * @export  @interface V1TestCaseGet200Response\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TestCaseGet200Response "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestCaseGet200Response",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestCaseGet200Response#testCases:member",
              "docComment": "/**\n * @type {Array<TestCase>}  @memberof V1TestCaseGet200Response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "testCases?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestCase",
                  "canonicalReference": "@gentrace/core!TestCase:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "testCases",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!TestResult:interface",
          "docComment": "/**\n * @export  @interface TestResult\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TestResult "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResult#branch:member",
              "docComment": "/**\n * The branch that the test result was created from  @type {string}  @memberof TestResult\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "branch?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "branch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResult#commit:member",
              "docComment": "/**\n * The commit that the test result was created from  @type {string}  @memberof TestResult\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commit?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResult#createdAt:member",
              "docComment": "/**\n * The date and time the test result was created.  @type {string}  @memberof TestResult\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createdAt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "createdAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResult#id:member",
              "docComment": "/**\n * The unique identifier for the test result.  @type {string}  @memberof TestResult\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResult#metadata:member",
              "docComment": "/**\n * @type {{ [key: string]: MetadataValueObject; }}  @memberof TestResult\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataValueObject",
                  "canonicalReference": "@gentrace/core!~MetadataValueObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResult#name:member",
              "docComment": "/**\n * The name of the test result  @type {string}  @memberof TestResult\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResult#pipelineId:member",
              "docComment": "/**\n * The unique identifier for the pipeline associated with the test result.  @type {string}  @memberof TestResult\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipelineId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pipelineId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResult#updatedAt:member",
              "docComment": "/**\n * The date and time the test result was last updated.  @type {string}  @memberof TestResult\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatedAt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!TestResultGet200Response:interface",
          "docComment": "/**\n * @export  @interface V1TestResultGet200Response\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TestResultGet200Response "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestResultGet200Response",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultGet200Response#testResults:member",
              "docComment": "/**\n * @type {Array<TestResult>}  @memberof V1TestResultGet200Response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "testResults?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestResult",
                  "canonicalReference": "@gentrace/core!TestResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "testResults",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!TestResultPost200Response:interface",
          "docComment": "/**\n * @export  @interface V1TestResultPost200Response\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TestResultPost200Response "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestResultPost200Response",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPost200Response#resultId:member",
              "docComment": "/**\n * @type {string}  @memberof V1TestResultPost200Response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resultId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resultId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!TestResultPostRequest:interface",
          "docComment": "/**\n * @export  @interface V1TestResultPostRequest\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TestResultPostRequest "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestResultPostRequest",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#branch:member",
              "docComment": "/**\n * The branch that the test result was created from  @type {string}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "branch?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "branch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#collectionMethod:member",
              "docComment": "/**\n * The method used to collect the test runs  @type {string}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collectionMethod?: "
                },
                {
                  "kind": "Reference",
                  "text": "V1TestResultPostRequestCollectionMethodEnum",
                  "canonicalReference": "@gentrace/core!~V1TestResultPostRequestCollectionMethodEnum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collectionMethod",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#commit:member",
              "docComment": "/**\n * The commit that the test result was created from  @type {string}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "commit?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "commit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#metadata:member",
              "docComment": "/**\n * @type {{ [key: string]: MetadataValueObject; }}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataValueObject",
                  "canonicalReference": "@gentrace/core!~MetadataValueObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#name:member",
              "docComment": "/**\n * The name of the test result  @type {string}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#pipelineId:member",
              "docComment": "/**\n * The pipeline ID to create the test result for. Only one of pipelineSlug or pipelineId is required.  @type {string}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipelineId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pipelineId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#pipelineSlug:member",
              "docComment": "/**\n * The pipeline slug to create the test result for. Only one of pipelineSlug or pipelineId is required.  @type {string}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pipelineSlug?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "pipelineSlug",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#testRuns:member",
              "docComment": "/**\n * @type {Array<V1TestResultPostRequestTestRunsInner>}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "testRuns: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestResultPostRequestTestRunsInner",
                  "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "testRuns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequest#triggerRemoteEvals:member",
              "docComment": "/**\n * Optional flag to trigger remote evaluations  @type {boolean}  @memberof V1TestResultPostRequest\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "triggerRemoteEvals?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "triggerRemoteEvals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner:interface",
          "docComment": "/**\n * @export  @interface V1TestResultPostRequestTestRunsInner\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TestResultPostRequestTestRunsInner "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestResultPostRequestTestRunsInner",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#caseId:member",
              "docComment": "/**\n * The ID of the test case. Mutually exclusive with \\'name\\' and \\'inputs\\'.  @type {string}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "caseId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "caseId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#error:member",
              "docComment": "/**\n * @type {string}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#evaluations:member",
              "docComment": "/**\n * Optional array of local evaluations  @type {Array<LocalEvaluation>}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "evaluations?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LocalEvaluation",
                  "canonicalReference": "@gentrace/core!LocalEvaluation:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "evaluations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#expectedOutputs:member",
              "docComment": "/**\n * Used for supplying local data. The expected outputs for the test run. Used with \\'name\\' and mutually exclusive with \\'caseId\\'. Optional, since not all evaluators require expected outputs.  @type {{ [key: string]: any; }}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expectedOutputs?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "expectedOutputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#id:member",
              "docComment": "/**\n * The ID of the test run  @type {string}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#inputs:member",
              "docComment": "/**\n * Used for supplying local data. The input data for the test run. Used with \\'name\\' and mutually exclusive with \\'caseId\\'.  @type {{ [key: string]: any; }}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputs?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#metadata:member",
              "docComment": "/**\n * @type {{ [key: string]: MetadataValueObject; }}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "MetadataValueObject",
                  "canonicalReference": "@gentrace/core!~MetadataValueObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#name:member",
              "docComment": "/**\n * Used for supplying local data. The name of the test run. Used with \\'inputs\\' and mutually exclusive with \\'caseId\\'.  @type {string}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#path:member",
              "docComment": "/**\n * Optional path which describes the organizational hierarchy of this test run in relation to all the pipeline tests.  @type {Array<RunPathSection>}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RunPathSection",
                  "canonicalReference": "@gentrace/core!~RunPathSection:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner#stepRuns:member",
              "docComment": "/**\n * Use outputs.steps insteads.  @type {Array<StepRun>}  @memberof V1TestResultPostRequestTestRunsInner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stepRuns: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StepRun_2",
                  "canonicalReference": "@gentrace/core!~StepRun_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stepRuns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gentrace/core!TestResultStatusGet200Response:interface",
          "docComment": "/**\n * @export  @interface V1TestResultStatusGet200Response\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TestResultStatusGet200Response "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestResultStatusGet200Response",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultStatusGet200Response#done:member",
              "docComment": "/**\n * @type {number}  @memberof V1TestResultStatusGet200Response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "done: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "done",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultStatusGet200Response#failure:member",
              "docComment": "/**\n * @type {number}  @memberof V1TestResultStatusGet200Response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "failure: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "failure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultStatusGet200Response#pending:member",
              "docComment": "/**\n * @type {number}  @memberof V1TestResultStatusGet200Response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pending: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pending",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gentrace/core!TestResultStatusGet200Response#total:member",
              "docComment": "/**\n * @type {number}  @memberof V1TestResultStatusGet200Response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "total: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "total",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gentrace/core!TestRun:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TestRun = "
            },
            {
              "kind": "Reference",
              "text": "TestResultPostRequestTestRunsInner",
              "canonicalReference": "@gentrace/core!TestResultPostRequestTestRunsInner:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TestRun",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!updateDataset:function(1)",
          "docComment": "/**\n * Updates a dataset in the Gentrace API.  @async\n *\n * @param id - The ID of the dataset to update.\n *\n * @param payload - The dataset update payload.\n *\n * @returns {Promise<DatasetV2>} - A promise that resolves to the updated dataset.\n *\n * @throws\n *\n * {Error} - Throws an error if the Gentrace API key is not initialized.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "updateDataset: (id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", payload: "
            },
            {
              "kind": "Reference",
              "text": "UpdateDatasetV2",
              "canonicalReference": "@gentrace/core!~UpdateDatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "payload",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "updateDataset"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!updateTestCase:function(1)",
          "docComment": "/**\n * Updates a single test case in the Gentrace API\n *\n * @async\n *\n * @remarks\n *\n * This function updates an existing test case with the provided information. The payload should include the test case ID and any fields to be updated.\n *\n * @param payload - The payload containing the test case update information\n *\n * @returns {Promise<string>} A Promise that resolves to the updated case ID\n *\n * @throws\n *\n * {Error} Throws an error if the SDK is not initialized or if the test case ID is invalid\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "updateTestCase: (payload: "
            },
            {
              "kind": "Reference",
              "text": "UpdateTestCase",
              "canonicalReference": "@gentrace/core!~UpdateTestCase:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "payload",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "updateTestCase"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!updateTestResult:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function updateTestResult(resultId: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", testCases: "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "TestCase",
              "canonicalReference": "@gentrace/core!TestCase:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TestCaseV2",
              "canonicalReference": "@gentrace/core!~TestCaseV2:interface"
            },
            {
              "kind": "Content",
              "text": ")[]"
            },
            {
              "kind": "Content",
              "text": ", outputsList: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "resultId",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "testCases",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "outputsList",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "name": "updateTestResult"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!updateTestResultWithRunners:function(1)",
          "docComment": "/**\n * Updates a test result with the provided runners.\n *\n * @async\n *\n * @param resultId - The ID of the test result to update.\n *\n * @param runners - Additional test runs to add to the existing test result.\n *\n * @returns {Promise<any>} A Promise that resolves with the response data from the Gentrace API.\n *\n * @throws\n *\n * {Error} Throws an error if the update operation fails.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function updateTestResultWithRunners(resultId: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", runners: "
            },
            {
              "kind": "Reference",
              "text": "PipelineRunDataTuple",
              "canonicalReference": "@gentrace/core!PipelineRunDataTuple:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "resultId",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "runners",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "updateTestResultWithRunners"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!uploadBuffer:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function uploadBuffer(fileName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", buffer: "
            },
            {
              "kind": "Reference",
              "text": "Buffer",
              "canonicalReference": "!Buffer:class"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Content",
              "text": "undefined | "
            },
            {
              "kind": "Reference",
              "text": "FilePropertyBag",
              "canonicalReference": "!FilePropertyBag:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "fileName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "buffer",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "uploadBuffer"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!uploadFile:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function uploadFile(file: "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "file",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "uploadFile"
        },
        {
          "kind": "Class",
          "canonicalReference": "@gentrace/core!V1Api:class",
          "docComment": "/**\n * V1Api - object-oriented interface  @export  @class V1Api  @extends {BaseAPI}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class V1Api extends "
            },
            {
              "kind": "Reference",
              "text": "BaseAPI",
              "canonicalReference": "@gentrace/core!~BaseAPI:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "V1Api",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1FeedbackPost:member(1)",
              "docComment": "/**\n * @summary Submit feedback\n *\n * @param feedbackRequest - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1FeedbackPost(feedbackRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "FeedbackRequest",
                  "canonicalReference": "@gentrace/core!FeedbackRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FeedbackResponse",
                  "canonicalReference": "@gentrace/core!FeedbackResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "feedbackRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1FeedbackPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1FilesUploadPost:member(1)",
              "docComment": "/**\n * @summary Upload an image file\n *\n * @param org - (If not using an organization API Key) the ID of the organization\n *\n * @param file - The file to upload.\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1FilesUploadPost(org?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", file?: "
                },
                {
                  "kind": "Reference",
                  "text": "File",
                  "canonicalReference": "!File:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V1FilesUploadPost201Response",
                  "canonicalReference": "@gentrace/core!~V1FilesUploadPost201Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "org",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "file",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1FilesUploadPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1PipelinesGet:member(1)",
              "docComment": "/**\n * @summary Get pipelines, optionally filtered by label\n *\n * @param label - The label to filter pipelines by\n *\n * @param slug - The slug to filter pipelines by\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1PipelinesGet(label?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", slug?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PipelinesGet200Response",
                  "canonicalReference": "@gentrace/core!PipelinesGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "slug",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1PipelinesGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1RunPost:member(1)",
              "docComment": "/**\n * @summary Create a run\n *\n * @param runRequest - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1RunPost(runRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "RunRequest",
                  "canonicalReference": "@gentrace/core!RunRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RunResponse",
                  "canonicalReference": "@gentrace/core!RunResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "runRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1RunPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestCaseGet:member(1)",
              "docComment": "/**\n * At least one of datasetId, pipelineId, or pipelineSlug must be provided  @summary Get test cases for a pipeline or dataset\n *\n * @param datasetId - The ID of the Dataset to retrieve test cases for\n *\n * @param pipelineId - The ID of the Pipeline to retrieve test cases for\n *\n * @param pipelineSlug - The slug of the Pipeline to retrieve test cases for\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestCaseGet(datasetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", pipelineId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", pipelineSlug?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestCaseGet200Response",
                  "canonicalReference": "@gentrace/core!TestCaseGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "datasetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "pipelineId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "pipelineSlug",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestCaseGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestCasePatch:member(1)",
              "docComment": "/**\n * @summary Update an existing test case\n *\n * @param updateTestCase - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestCasePatch(updateTestCase: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateTestCase",
                  "canonicalReference": "@gentrace/core!~UpdateTestCase:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V1TestCasePatch200Response",
                  "canonicalReference": "@gentrace/core!~V1TestCasePatch200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "updateTestCase",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestCasePatch"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestCasePost:member(1)",
              "docComment": "/**\n * @summary Create a new test case\n *\n * @param v1TestCasePostRequest - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestCasePost(v1TestCasePostRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "V1TestCasePostRequest",
                  "canonicalReference": "@gentrace/core!~V1TestCasePostRequest:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V1TestCasePost200Response",
                  "canonicalReference": "@gentrace/core!~V1TestCasePost200Response:type"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v1TestCasePostRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestCasePost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestResultGet:member(1)",
              "docComment": "/**\n * @summary Get test results for a pipeline\n *\n * @param pipelineSlug - The slug of the pipeline\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestResultGet(pipelineSlug: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestResultGet200Response",
                  "canonicalReference": "@gentrace/core!TestResultGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipelineSlug",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestResultGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestResultIdGet:member(1)",
              "docComment": "/**\n * @summary Fetch test result by ID\n *\n * @param id - The ID of the test result\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestResultIdGet(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ExpandedTestResult",
                  "canonicalReference": "@gentrace/core!~ExpandedTestResult:type"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestResultIdGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestResultIdPost:member(1)",
              "docComment": "/**\n * @summary Add more test runs to a result\n *\n * @param id - The ID of the test result\n *\n * @param v1TestResultIdPostRequest - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestResultIdPost(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", v1TestResultIdPostRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "V1TestResultIdPostRequest",
                  "canonicalReference": "@gentrace/core!~V1TestResultIdPostRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestResultPost200Response",
                  "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v1TestResultIdPostRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestResultIdPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestResultPost:member(1)",
              "docComment": "/**\n * @summary Create a new test result from runs\n *\n * @param v1TestResultPostRequest - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestResultPost(v1TestResultPostRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "TestResultPostRequest",
                  "canonicalReference": "@gentrace/core!TestResultPostRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestResultPost200Response",
                  "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v1TestResultPostRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestResultPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestResultSimpleIdPost:member(1)",
              "docComment": "/**\n * @summary Add more test runs to a result (simple version)\n *\n * @param id - The ID of the test result\n *\n * @param v1TestResultSimpleIdPostRequest - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestResultSimpleIdPost(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", v1TestResultSimpleIdPostRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "V1TestResultSimpleIdPostRequest",
                  "canonicalReference": "@gentrace/core!~V1TestResultSimpleIdPostRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestResultPost200Response",
                  "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v1TestResultSimpleIdPostRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestResultSimpleIdPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestResultSimplePost:member(1)",
              "docComment": "/**\n * @summary Create a new test result from test runs\n *\n * @param v1TestResultSimplePostRequest - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestResultSimplePost(v1TestResultSimplePostRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "V1TestResultSimplePostRequest",
                  "canonicalReference": "@gentrace/core!~V1TestResultSimplePostRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestResultPost200Response",
                  "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v1TestResultSimplePostRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestResultSimplePost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V1Api#v1TestResultStatusGet:member(1)",
              "docComment": "/**\n * @summary Get status of the test result\n *\n * @param id - The ID of the test result\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V1Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v1TestResultStatusGet(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestResultStatusGet200Response",
                  "canonicalReference": "@gentrace/core!TestResultStatusGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v1TestResultStatusGet"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V1ApiAxiosParamCreator:function(1)",
          "docComment": "/**\n * V1Api - axios parameter creator  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V1ApiAxiosParamCreator: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v1FeedbackPost: (feedbackRequest: "
            },
            {
              "kind": "Reference",
              "text": "FeedbackRequest",
              "canonicalReference": "@gentrace/core!FeedbackRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1FilesUploadPost: (org?: string, file?: "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1PipelinesGet: (label?: string, slug?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1RunPost: (runRequest: "
            },
            {
              "kind": "Reference",
              "text": "RunRequest",
              "canonicalReference": "@gentrace/core!RunRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestCaseGet: (datasetId?: string, pipelineId?: string, pipelineSlug?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestCasePatch: (updateTestCase: "
            },
            {
              "kind": "Reference",
              "text": "UpdateTestCase",
              "canonicalReference": "@gentrace/core!~UpdateTestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestCasePost: (v1TestCasePostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestCasePostRequest",
              "canonicalReference": "@gentrace/core!~V1TestCasePostRequest:type"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultGet: (pipelineSlug: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultIdGet: (id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultIdPost: (id: string, v1TestResultIdPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultIdPostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultIdPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultPost: (v1TestResultPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "TestResultPostRequest",
              "canonicalReference": "@gentrace/core!TestResultPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultSimpleIdPost: (id: string, v1TestResultSimpleIdPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultSimpleIdPostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultSimpleIdPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultSimplePost: (v1TestResultSimplePostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultSimplePostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultSimplePostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultStatusGet: (id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 106
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "V1ApiAxiosParamCreator"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V1ApiFactory:function(1)",
          "docComment": "/**\n * V1Api - factory interface  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V1ApiFactory: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ", basePath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v1FeedbackPost(feedbackRequest: "
            },
            {
              "kind": "Reference",
              "text": "FeedbackRequest",
              "canonicalReference": "@gentrace/core!FeedbackRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeedbackResponse",
              "canonicalReference": "@gentrace/core!FeedbackResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1FilesUploadPost(org?: string, file?: "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V1FilesUploadPost201Response",
              "canonicalReference": "@gentrace/core!~V1FilesUploadPost201Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1PipelinesGet(label?: string, slug?: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PipelinesGet200Response",
              "canonicalReference": "@gentrace/core!PipelinesGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1RunPost(runRequest: "
            },
            {
              "kind": "Reference",
              "text": "RunRequest",
              "canonicalReference": "@gentrace/core!RunRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RunResponse",
              "canonicalReference": "@gentrace/core!RunResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestCaseGet(datasetId?: string, pipelineId?: string, pipelineSlug?: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCaseGet200Response",
              "canonicalReference": "@gentrace/core!TestCaseGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestCasePatch(updateTestCase: "
            },
            {
              "kind": "Reference",
              "text": "UpdateTestCase",
              "canonicalReference": "@gentrace/core!~UpdateTestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V1TestCasePatch200Response",
              "canonicalReference": "@gentrace/core!~V1TestCasePatch200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestCasePost(v1TestCasePostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestCasePostRequest",
              "canonicalReference": "@gentrace/core!~V1TestCasePostRequest:type"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V1TestCasePost200Response",
              "canonicalReference": "@gentrace/core!~V1TestCasePost200Response:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultGet(pipelineSlug: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultGet200Response",
              "canonicalReference": "@gentrace/core!TestResultGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultIdGet(id: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExpandedTestResult",
              "canonicalReference": "@gentrace/core!~ExpandedTestResult:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultIdPost(id: string, v1TestResultIdPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultIdPostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultIdPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultPost(v1TestResultPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "TestResultPostRequest",
              "canonicalReference": "@gentrace/core!TestResultPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultSimpleIdPost(id: string, v1TestResultSimpleIdPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultSimpleIdPostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultSimpleIdPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultSimplePost(v1TestResultSimplePostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultSimplePostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultSimplePostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v1TestResultStatusGet(id: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultStatusGet200Response",
              "canonicalReference": "@gentrace/core!TestResultStatusGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 82
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "basePath",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "axios",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "V1ApiFactory"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V1ApiFp:function(1)",
          "docComment": "/**\n * V1Api - functional programming interface  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V1ApiFp: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v1FeedbackPost(feedbackRequest: "
            },
            {
              "kind": "Reference",
              "text": "FeedbackRequest",
              "canonicalReference": "@gentrace/core!FeedbackRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeedbackResponse",
              "canonicalReference": "@gentrace/core!FeedbackResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1FilesUploadPost(org?: string, file?: "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V1FilesUploadPost201Response",
              "canonicalReference": "@gentrace/core!~V1FilesUploadPost201Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1PipelinesGet(label?: string, slug?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PipelinesGet200Response",
              "canonicalReference": "@gentrace/core!PipelinesGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1RunPost(runRequest: "
            },
            {
              "kind": "Reference",
              "text": "RunRequest",
              "canonicalReference": "@gentrace/core!RunRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RunResponse",
              "canonicalReference": "@gentrace/core!RunResponse:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestCaseGet(datasetId?: string, pipelineId?: string, pipelineSlug?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCaseGet200Response",
              "canonicalReference": "@gentrace/core!TestCaseGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestCasePatch(updateTestCase: "
            },
            {
              "kind": "Reference",
              "text": "UpdateTestCase",
              "canonicalReference": "@gentrace/core!~UpdateTestCase:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V1TestCasePatch200Response",
              "canonicalReference": "@gentrace/core!~V1TestCasePatch200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestCasePost(v1TestCasePostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestCasePostRequest",
              "canonicalReference": "@gentrace/core!~V1TestCasePostRequest:type"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V1TestCasePost200Response",
              "canonicalReference": "@gentrace/core!~V1TestCasePost200Response:type"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestResultGet(pipelineSlug: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultGet200Response",
              "canonicalReference": "@gentrace/core!TestResultGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestResultIdGet(id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExpandedTestResult",
              "canonicalReference": "@gentrace/core!~ExpandedTestResult:type"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestResultIdPost(id: string, v1TestResultIdPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultIdPostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultIdPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestResultPost(v1TestResultPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "TestResultPostRequest",
              "canonicalReference": "@gentrace/core!TestResultPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestResultSimpleIdPost(id: string, v1TestResultSimpleIdPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultSimpleIdPostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultSimpleIdPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestResultSimplePost(v1TestResultSimplePostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V1TestResultSimplePostRequest",
              "canonicalReference": "@gentrace/core!~V1TestResultSimplePostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultPost200Response",
              "canonicalReference": "@gentrace/core!TestResultPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v1TestResultStatusGet(id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestResultStatusGet200Response",
              "canonicalReference": "@gentrace/core!TestResultStatusGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 162
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "V1ApiFp"
        },
        {
          "kind": "Class",
          "canonicalReference": "@gentrace/core!V2Api:class",
          "docComment": "/**\n * V2Api - object-oriented interface  @export  @class V2Api  @extends {BaseAPI}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class V2Api extends "
            },
            {
              "kind": "Reference",
              "text": "BaseAPI",
              "canonicalReference": "@gentrace/core!~BaseAPI:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "V2Api",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2DatasetsGet:member(1)",
              "docComment": "/**\n * @summary List datasets\n *\n * @param pipelineSlug - The slug of the pipeline to filter datasets by\n *\n * @param pipelineId - The ID of the pipeline to filter datasets by\n *\n * @param archived - Filter datasets by archived status\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2DatasetsGet(pipelineSlug?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", pipelineId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", archived?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2DatasetsGet200Response",
                  "canonicalReference": "@gentrace/core!~V2DatasetsGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipelineSlug",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "pipelineId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "archived",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2DatasetsGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2DatasetsIdGet:member(1)",
              "docComment": "/**\n * @summary Get a single dataset\n *\n * @param id - The ID of the dataset to retrieve\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2DatasetsIdGet(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DatasetV2",
                  "canonicalReference": "@gentrace/core!~DatasetV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2DatasetsIdGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2DatasetsIdPost:member(1)",
              "docComment": "/**\n * @summary Update a dataset\n *\n * @param id - The ID of the dataset to update\n *\n * @param updateDatasetV2 - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2DatasetsIdPost(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", updateDatasetV2: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateDatasetV2",
                  "canonicalReference": "@gentrace/core!~UpdateDatasetV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DatasetV2",
                  "canonicalReference": "@gentrace/core!~DatasetV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "updateDatasetV2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2DatasetsIdPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2DatasetsPost:member(1)",
              "docComment": "/**\n * @summary Create a new dataset\n *\n * @param createDatasetV2 - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2DatasetsPost(createDatasetV2: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateDatasetV2",
                  "canonicalReference": "@gentrace/core!~CreateDatasetV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DatasetV2",
                  "canonicalReference": "@gentrace/core!~DatasetV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "createDatasetV2",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2DatasetsPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2EvaluationsBulkPost:member(1)",
              "docComment": "/**\n * @summary Bulk create evaluations\n *\n * @param v2EvaluationsBulkPostRequest - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2EvaluationsBulkPost(v2EvaluationsBulkPostRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "V2EvaluationsBulkPostRequest",
                  "canonicalReference": "@gentrace/core!~V2EvaluationsBulkPostRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2EvaluationsBulkPost200Response",
                  "canonicalReference": "@gentrace/core!~V2EvaluationsBulkPost200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v2EvaluationsBulkPostRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2EvaluationsBulkPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2EvaluationsGet:member(1)",
              "docComment": "/**\n * @summary Get evaluations\n *\n * @param resultId - The ID of the result to get evaluations for\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2EvaluationsGet(resultId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2EvaluationsGet200Response",
                  "canonicalReference": "@gentrace/core!~V2EvaluationsGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "resultId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2EvaluationsGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2EvaluatorsGet:member(1)",
              "docComment": "/**\n * Get evaluators for a given pipeline  @summary Get evaluators\n *\n * @param pipelineId - The ID of the Pipeline to retrieve evaluators for. Use \\&quot;null\\&quot; to retrieve the organization\\&#39;s evaluator templates.\n *\n * @param pipelineSlug - Or, the slug of the Pipeline to retrieve evaluators for\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2EvaluatorsGet(pipelineId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", pipelineSlug?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2EvaluatorsGet200Response",
                  "canonicalReference": "@gentrace/core!~V2EvaluatorsGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipelineId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "pipelineSlug",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2EvaluatorsGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2FeedbackIdGet:member(1)",
              "docComment": "/**\n * @summary Get feedback\n *\n * @param id - Feedback ID\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2FeedbackIdGet(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FeedbackV2",
                  "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2FeedbackIdGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2FeedbackIdPatch:member(1)",
              "docComment": "/**\n * @summary Update feedback\n *\n * @param id - Feedback ID\n *\n * @param updateFeedbackV2 - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2FeedbackIdPatch(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", updateFeedbackV2: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateFeedbackV2",
                  "canonicalReference": "@gentrace/core!~UpdateFeedbackV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FeedbackV2",
                  "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "updateFeedbackV2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2FeedbackIdPatch"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2FeedbackPost:member(1)",
              "docComment": "/**\n * @summary Create feedback\n *\n * @param createFeedbackV2 - \n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2FeedbackPost(createFeedbackV2: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateFeedbackV2",
                  "canonicalReference": "@gentrace/core!~CreateFeedbackV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FeedbackV2",
                  "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "createFeedbackV2",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2FeedbackPost"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2FoldersGet:member(1)",
              "docComment": "/**\n * @summary Get folders\n *\n * @param parentFolderId - The parent folder ID to filter folders by. Null filters to root folder. Absent will return all folders.\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2FoldersGet(parentFolderId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2FoldersGet200Response",
                  "canonicalReference": "@gentrace/core!~V2FoldersGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parentFolderId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2FoldersGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2FoldersIdGet:member(1)",
              "docComment": "/**\n * @summary Get a folder\n *\n * @param id - The ID of the folder to retrieve\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2FoldersIdGet(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FolderV2",
                  "canonicalReference": "@gentrace/core!~FolderV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2FoldersIdGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2PipelinesGet:member(1)",
              "docComment": "/**\n * @summary Get pipelines\n *\n * @param label - The label to filter pipelines by\n *\n * @param slug - The slug to filter pipelines by\n *\n * @param folderId - The folder ID to filter pipelines by. Null filters to root folder. Absent will return all folders.\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2PipelinesGet(label?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", slug?: "
                },
                {
                  "kind": "Reference",
                  "text": "SearchableStringInput",
                  "canonicalReference": "@gentrace/core!~SearchableStringInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", folderId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2PipelinesGet200Response",
                  "canonicalReference": "@gentrace/core!~V2PipelinesGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "slug",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "folderId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2PipelinesGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2RunsIdGet:member(1)",
              "docComment": "/**\n * @summary Get a run\n *\n * @param id - The ID of the run to retrieve\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2RunsIdGet(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RunV2",
                  "canonicalReference": "@gentrace/core!~RunV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2RunsIdGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2TestCasesGet:member(1)",
              "docComment": "/**\n * At least one of datasetId, pipelineId, or pipelineSlug must be provided  @summary Get test cases\n *\n * @param datasetId - The ID of the Dataset to retrieve test cases for\n *\n * @param pipelineId - The ID of the Pipeline to retrieve test cases for\n *\n * @param pipelineSlug - The slug of the Pipeline to retrieve test cases for\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2TestCasesGet(datasetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", pipelineId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", pipelineSlug?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2TestCasesGet200Response",
                  "canonicalReference": "@gentrace/core!~V2TestCasesGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "datasetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "pipelineId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "pipelineSlug",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2TestCasesGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2TestCasesIdDelete:member(1)",
              "docComment": "/**\n * @summary Delete a test case\n *\n * @param id - The ID of the test case to delete\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2TestCasesIdDelete(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2TestCasesIdDelete200Response",
                  "canonicalReference": "@gentrace/core!~V2TestCasesIdDelete200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2TestCasesIdDelete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2TestCasesIdGet:member(1)",
              "docComment": "/**\n * @summary Get a test case\n *\n * @param id - The ID of the test case to retrieve\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2TestCasesIdGet(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TestCaseV2",
                  "canonicalReference": "@gentrace/core!~TestCaseV2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2TestCasesIdGet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V2Api#v2TestResultsGet:member(1)",
              "docComment": "/**\n * @summary Get test results\n *\n * @param pipelineId - The ID of the pipeline\n *\n * @param pipelineSlug - The slug of the pipeline\n *\n * @param createdAt - Criteria to search by creation date\n *\n * @param metadata - Criteria to search by metadata\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V2Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v2TestResultsGet(pipelineId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", pipelineSlug?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", createdAt?: "
                },
                {
                  "kind": "Reference",
                  "text": "SearchableUnixSecondsInput",
                  "canonicalReference": "@gentrace/core!~SearchableUnixSecondsInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", metadata?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "FilterableMetadataInputValue",
                  "canonicalReference": "@gentrace/core!~FilterableMetadataInputValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V2TestResultsGet200Response",
                  "canonicalReference": "@gentrace/core!~V2TestResultsGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pipelineId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "pipelineSlug",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "createdAt",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "metadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v2TestResultsGet"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V2ApiAxiosParamCreator:function(1)",
          "docComment": "/**\n * V2Api - axios parameter creator  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V2ApiAxiosParamCreator: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v2DatasetsGet: (pipelineSlug?: string, pipelineId?: string, archived?: boolean, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2DatasetsIdGet: (id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2DatasetsIdPost: (id: string, updateDatasetV2: "
            },
            {
              "kind": "Reference",
              "text": "UpdateDatasetV2",
              "canonicalReference": "@gentrace/core!~UpdateDatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2DatasetsPost: (createDatasetV2: "
            },
            {
              "kind": "Reference",
              "text": "CreateDatasetV2",
              "canonicalReference": "@gentrace/core!~CreateDatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2EvaluationsBulkPost: (v2EvaluationsBulkPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V2EvaluationsBulkPostRequest",
              "canonicalReference": "@gentrace/core!~V2EvaluationsBulkPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2EvaluationsGet: (resultId: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2EvaluatorsGet: (pipelineId?: string, pipelineSlug?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FeedbackIdGet: (id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FeedbackIdPatch: (id: string, updateFeedbackV2: "
            },
            {
              "kind": "Reference",
              "text": "UpdateFeedbackV2",
              "canonicalReference": "@gentrace/core!~UpdateFeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FeedbackPost: (createFeedbackV2: "
            },
            {
              "kind": "Reference",
              "text": "CreateFeedbackV2",
              "canonicalReference": "@gentrace/core!~CreateFeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FoldersGet: (parentFolderId?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FoldersIdGet: (id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2PipelinesGet: (label?: string, slug?: "
            },
            {
              "kind": "Reference",
              "text": "SearchableStringInput",
              "canonicalReference": "@gentrace/core!~SearchableStringInput:type"
            },
            {
              "kind": "Content",
              "text": ", folderId?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2RunsIdGet: (id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2TestCasesGet: (datasetId?: string, pipelineId?: string, pipelineSlug?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2TestCasesIdDelete: (id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2TestCasesIdGet: (id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2TestResultsGet: (pipelineId?: string, pipelineSlug?: string, createdAt?: "
            },
            {
              "kind": "Reference",
              "text": "SearchableUnixSecondsInput",
              "canonicalReference": "@gentrace/core!~SearchableUnixSecondsInput:type"
            },
            {
              "kind": "Content",
              "text": ", metadata?: {\n        [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "FilterableMetadataInputValue",
              "canonicalReference": "@gentrace/core!~FilterableMetadataInputValue:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    }, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 128
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "V2ApiAxiosParamCreator"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V2ApiFactory:function(1)",
          "docComment": "/**\n * V2Api - factory interface  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V2ApiFactory: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ", basePath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v2DatasetsGet(pipelineSlug?: string, pipelineId?: string, archived?: boolean, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2DatasetsGet200Response",
              "canonicalReference": "@gentrace/core!~V2DatasetsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2DatasetsIdGet(id: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2DatasetsIdPost(id: string, updateDatasetV2: "
            },
            {
              "kind": "Reference",
              "text": "UpdateDatasetV2",
              "canonicalReference": "@gentrace/core!~UpdateDatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2DatasetsPost(createDatasetV2: "
            },
            {
              "kind": "Reference",
              "text": "CreateDatasetV2",
              "canonicalReference": "@gentrace/core!~CreateDatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2EvaluationsBulkPost(v2EvaluationsBulkPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V2EvaluationsBulkPostRequest",
              "canonicalReference": "@gentrace/core!~V2EvaluationsBulkPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2EvaluationsBulkPost200Response",
              "canonicalReference": "@gentrace/core!~V2EvaluationsBulkPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2EvaluationsGet(resultId: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2EvaluationsGet200Response",
              "canonicalReference": "@gentrace/core!~V2EvaluationsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2EvaluatorsGet(pipelineId?: string, pipelineSlug?: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2EvaluatorsGet200Response",
              "canonicalReference": "@gentrace/core!~V2EvaluatorsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FeedbackIdGet(id: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeedbackV2",
              "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FeedbackIdPatch(id: string, updateFeedbackV2: "
            },
            {
              "kind": "Reference",
              "text": "UpdateFeedbackV2",
              "canonicalReference": "@gentrace/core!~UpdateFeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeedbackV2",
              "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FeedbackPost(createFeedbackV2: "
            },
            {
              "kind": "Reference",
              "text": "CreateFeedbackV2",
              "canonicalReference": "@gentrace/core!~CreateFeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeedbackV2",
              "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FoldersGet(parentFolderId?: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2FoldersGet200Response",
              "canonicalReference": "@gentrace/core!~V2FoldersGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2FoldersIdGet(id: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FolderV2",
              "canonicalReference": "@gentrace/core!~FolderV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2PipelinesGet(label?: string, slug?: "
            },
            {
              "kind": "Reference",
              "text": "SearchableStringInput",
              "canonicalReference": "@gentrace/core!~SearchableStringInput:type"
            },
            {
              "kind": "Content",
              "text": ", folderId?: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2PipelinesGet200Response",
              "canonicalReference": "@gentrace/core!~V2PipelinesGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2RunsIdGet(id: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RunV2",
              "canonicalReference": "@gentrace/core!~RunV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2TestCasesGet(datasetId?: string, pipelineId?: string, pipelineSlug?: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2TestCasesGet200Response",
              "canonicalReference": "@gentrace/core!~V2TestCasesGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2TestCasesIdDelete(id: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2TestCasesIdDelete200Response",
              "canonicalReference": "@gentrace/core!~V2TestCasesIdDelete200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2TestCasesIdGet(id: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCaseV2",
              "canonicalReference": "@gentrace/core!~TestCaseV2:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    v2TestResultsGet(pipelineId?: string, pipelineSlug?: string, createdAt?: "
            },
            {
              "kind": "Reference",
              "text": "SearchableUnixSecondsInput",
              "canonicalReference": "@gentrace/core!~SearchableUnixSecondsInput:type"
            },
            {
              "kind": "Content",
              "text": ", metadata?: {\n        [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "FilterableMetadataInputValue",
              "canonicalReference": "@gentrace/core!~FilterableMetadataInputValue:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    }, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2TestResultsGet200Response",
              "canonicalReference": "@gentrace/core!~V2TestResultsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 96
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "basePath",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "axios",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "V2ApiFactory"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V2ApiFp:function(1)",
          "docComment": "/**\n * V2Api - functional programming interface  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V2ApiFp: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v2DatasetsGet(pipelineSlug?: string, pipelineId?: string, archived?: boolean, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2DatasetsGet200Response",
              "canonicalReference": "@gentrace/core!~V2DatasetsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2DatasetsIdGet(id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2DatasetsIdPost(id: string, updateDatasetV2: "
            },
            {
              "kind": "Reference",
              "text": "UpdateDatasetV2",
              "canonicalReference": "@gentrace/core!~UpdateDatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2DatasetsPost(createDatasetV2: "
            },
            {
              "kind": "Reference",
              "text": "CreateDatasetV2",
              "canonicalReference": "@gentrace/core!~CreateDatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DatasetV2",
              "canonicalReference": "@gentrace/core!~DatasetV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2EvaluationsBulkPost(v2EvaluationsBulkPostRequest: "
            },
            {
              "kind": "Reference",
              "text": "V2EvaluationsBulkPostRequest",
              "canonicalReference": "@gentrace/core!~V2EvaluationsBulkPostRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2EvaluationsBulkPost200Response",
              "canonicalReference": "@gentrace/core!~V2EvaluationsBulkPost200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2EvaluationsGet(resultId: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2EvaluationsGet200Response",
              "canonicalReference": "@gentrace/core!~V2EvaluationsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2EvaluatorsGet(pipelineId?: string, pipelineSlug?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2EvaluatorsGet200Response",
              "canonicalReference": "@gentrace/core!~V2EvaluatorsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2FeedbackIdGet(id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeedbackV2",
              "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2FeedbackIdPatch(id: string, updateFeedbackV2: "
            },
            {
              "kind": "Reference",
              "text": "UpdateFeedbackV2",
              "canonicalReference": "@gentrace/core!~UpdateFeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeedbackV2",
              "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2FeedbackPost(createFeedbackV2: "
            },
            {
              "kind": "Reference",
              "text": "CreateFeedbackV2",
              "canonicalReference": "@gentrace/core!~CreateFeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FeedbackV2",
              "canonicalReference": "@gentrace/core!~FeedbackV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2FoldersGet(parentFolderId?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2FoldersGet200Response",
              "canonicalReference": "@gentrace/core!~V2FoldersGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2FoldersIdGet(id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FolderV2",
              "canonicalReference": "@gentrace/core!~FolderV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2PipelinesGet(label?: string, slug?: "
            },
            {
              "kind": "Reference",
              "text": "SearchableStringInput",
              "canonicalReference": "@gentrace/core!~SearchableStringInput:type"
            },
            {
              "kind": "Content",
              "text": ", folderId?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2PipelinesGet200Response",
              "canonicalReference": "@gentrace/core!~V2PipelinesGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2RunsIdGet(id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RunV2",
              "canonicalReference": "@gentrace/core!~RunV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2TestCasesGet(datasetId?: string, pipelineId?: string, pipelineSlug?: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2TestCasesGet200Response",
              "canonicalReference": "@gentrace/core!~V2TestCasesGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2TestCasesIdDelete(id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2TestCasesIdDelete200Response",
              "canonicalReference": "@gentrace/core!~V2TestCasesIdDelete200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2TestCasesIdGet(id: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TestCaseV2",
              "canonicalReference": "@gentrace/core!~TestCaseV2:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n    v2TestResultsGet(pipelineId?: string, pipelineSlug?: string, createdAt?: "
            },
            {
              "kind": "Reference",
              "text": "SearchableUnixSecondsInput",
              "canonicalReference": "@gentrace/core!~SearchableUnixSecondsInput:type"
            },
            {
              "kind": "Content",
              "text": ", metadata?: {\n        [key: string]: "
            },
            {
              "kind": "Reference",
              "text": "FilterableMetadataInputValue",
              "canonicalReference": "@gentrace/core!~FilterableMetadataInputValue:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    }, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V2TestResultsGet200Response",
              "canonicalReference": "@gentrace/core!~V2TestResultsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 200
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "V2ApiFp"
        },
        {
          "kind": "Class",
          "canonicalReference": "@gentrace/core!V3Api:class",
          "docComment": "/**\n * V3Api - object-oriented interface  @export  @class V3Api  @extends {BaseAPI}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class V3Api extends "
            },
            {
              "kind": "Reference",
              "text": "BaseAPI",
              "canonicalReference": "@gentrace/core!~BaseAPI:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "V3Api",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@gentrace/core!V3Api#v3EvaluationsGet:member(1)",
              "docComment": "/**\n * @summary Get evaluations\n *\n * @param resultId - The ID of the result to get evaluations for\n *\n * @param options - Override http request option.\n *\n * @throws\n *\n * {RequiredError}  @memberof V3Api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "v3EvaluationsGet(resultId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "AxiosRequestConfig",
                  "canonicalReference": "axios!AxiosRequestConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AxiosResponse",
                  "canonicalReference": "axios!AxiosResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "V3EvaluationsGet200Response",
                  "canonicalReference": "@gentrace/core!~V3EvaluationsGet200Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ", any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "resultId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "v3EvaluationsGet"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V3ApiAxiosParamCreator:function(1)",
          "docComment": "/**\n * V3Api - axios parameter creator  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V3ApiAxiosParamCreator: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v3EvaluationsGet: (resultId: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestArgs",
              "canonicalReference": "@gentrace/core!~RequestArgs:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "V3ApiAxiosParamCreator"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V3ApiFactory:function(1)",
          "docComment": "/**\n * V3Api - factory interface  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V3ApiFactory: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ", basePath?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v3EvaluationsGet(resultId: string, options?: any): "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V3EvaluationsGet200Response",
              "canonicalReference": "@gentrace/core!~V3EvaluationsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "basePath",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "axios",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "V3ApiFactory"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gentrace/core!V3ApiFp:function(1)",
          "docComment": "/**\n * V3Api - functional programming interface  @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "V3ApiFp: (configuration?: "
            },
            {
              "kind": "Reference",
              "text": "Configuration",
              "canonicalReference": "@gentrace/core!Configuration:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    v3EvaluationsGet(resultId: string, options?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosRequestConfig",
              "canonicalReference": "axios!AxiosRequestConfig:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<(axios?: "
            },
            {
              "kind": "Reference",
              "text": "AxiosInstance",
              "canonicalReference": "axios!AxiosInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", basePath?: string) => "
            },
            {
              "kind": "Reference",
              "text": "AxiosPromise",
              "canonicalReference": "axios!AxiosPromise:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V3EvaluationsGet200Response",
              "canonicalReference": "@gentrace/core!~V3EvaluationsGet200Response:interface"
            },
            {
              "kind": "Content",
              "text": ">>;\n}"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "configuration",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "V3ApiFp"
        }
      ]
    }
  ]
}
